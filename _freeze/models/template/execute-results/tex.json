{
  "hash": "e38d3f87233fb58c483dc79f13f3fe31",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto Paper Template\"\nauthor:\n    - 'Gustavo DÃ­az^[Assistant Professor of Instruction. Northwestern University. Email: <gustavo.diaz@northwestern.edu>]'\n    - \"Second Author^[Postdoctoral Fellow,  Fake University, Email : <second.author@fake.edu>]\"\ndate: today\ndate-format: long\nabstract: \\singlespacing This is a template to write an academic paper in Quarto. In this space, you normally write the abstract, which is a summary of the paper in no more than 120-200 words.\nthanks: 'Here you usually recognize the people who have given feedback to the paper. For some reason, research assistants are recognized in a separate sentence.'\nformat: \n     pdf:\n       documentclass: article \nfontsize: 12pt\nnumber-sections: true # automatic section numbering\nurlcolor: blue # highlight links\nbibliography: references.bib # needs to be in the same folder\ngeometry: # margins\n      - left=1in\n      - right=1in\n      - top=1in\n      - bottom=1in\nheader-includes:\n    # Line spacing\n    - \\usepackage{setspace}\n    - \\doublespacing\n    # Figures and tables always on top of page\n    - \\usepackage{float}\n    - \\floatplacement{figure}{t}\n    - \\floatplacement{table}{t}\n    # Tables and figures appear after they are mentioned\n    - \\usepackage{flafter}\n    # Figure stays within their section\n    - \\usepackage[section]{placeins}\n---\n\n\n\n\n\n\\newpage\n\n# Introduction\n\n<!-- This line is a comment, it will not render in the PDF. You introduce by placing your cursor in a text line and then input  ctrl + shift + C in Windows and cmd + shift + C in Mac.-->\n\nPapers usually start with an introduction. See [this link](https://anthlittle.github.io/files/little_intros.pdf) for some tips on how to write introductions.^[You can also try the full URL: <https://anthlittle.github.io/files/little_intros.pdf>. Oh, this is how you make footnotes.]\n\n# Code\n\nOur code chunk settings make it so that code is hidden from the pdf by default. We can override this with [code chunk options](https://quarto.org/docs/computations/execution-options.html).\n\nFor example, here I am forcing the code to appear in the pdf.\n\n\n\n```{.r .cell-code}\n1+1\n```\n\n[1] 2\n\n\n# Citations\n\nCitations by default are in Chicago style. For example, you can see @Wickham2016a to learn more about working with R and RStudio. See [here](https://quarto.org/docs/authoring/citations.html) for more information on how to use other citation styles.\n\n# Figures\n\n## From R\n\n@fig-penguins shows how to plot a figure from R code. See @Wickham2016 for more on how to make pretty plots.^[Notice how we use cross-reference to automate figure labels and citations.]\n\n\n![An example of how to make figures using `ggplot2`](template_files/figure-pdf/fig-penguins-1.pdf){#fig-penguins width=100%}\n\n\n\n## From external sources\n\nSometimes you may want to include a figure that was not made in R. Alternatively, when your data analysis becomes too cumbersome, you may want to make your figures in a separate file, and then import them. @fig-import shows an example using a URL. In practice, you would use the path of file in your working directory.\n\n::: {#fig-import}\n![](https://raw.githubusercontent.com/nrennie/nrennie.rbind.io/main/content/blog/2024-01-31-making-pdf-with-quarto-typst-latex/featured.png){fig-align=\"center\" width=50%}\n\nAn example of how to plot an external figure\n:::\n\n# Tables\n\n\n## Pipe tables\n\nYou can make tables \"by hand\" using pipe tables. Like @tbl-pipe shows.\n\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table syntax {#tbl-pipe}\n\nYou can even use a [Tables Generator](https://www.tablesgenerator.com/markdown_tables) to make them interactively and then copy and paste in your .qmd file.\n\n## From R\n\nOf course, you can also make tables in R and then print them in a nice format. I like to use the [`tinytable`](https://vincentarelbundock.github.io/tinytable/) for simple tables.^[You should also consider [`modelsummary`](https://modelsummary.com) for regression-like result tables.]\n\nFor example, @tbl-r is made \"by hand\" with R code. Of course, you can also plot tidy data objects, like @tbl-tidy shows.\n\n\n::: {#tbl-r .cell tbl-cap='An example of a table made with `tinytable`'}\n\\begin{table}\n\\centering\n\\begin{tblr}[         %% tabularray outer open\n]                     %% tabularray outer close\n{                     %% tabularray inner open\ncolspec={Q[]Q[]Q[]Q[]},\n}                     %% tabularray inner close\n\\toprule\nDefault & Left & Right & Center \\\\ \\midrule %% TinyTableHeader\n12 &  12 &  12 &  12 \\\\\n123 & 123 & 123 & 123 \\\\\n1 &   1 &   1 &   1 \\\\\n\\bottomrule\n\\end{tblr}\n\\end{table}\n:::\n\n::: {#tbl-tidy .cell tbl-cap='An example of a table made from tidy data with `tinytable`'}\n\\begin{table}\n\\centering\n\\begin{tblr}[         %% tabularray outer open\n]                     %% tabularray outer close\n{                     %% tabularray inner open\ncolspec={Q[]Q[]Q[]Q[]},\n}                     %% tabularray inner close\n\\toprule\ncountry & year & cases & population \\\\ \\midrule %% TinyTableHeader\nAfghanistan & 1999 &    745 &   19987071 \\\\\nAfghanistan & 2000 &   2666 &   20595360 \\\\\nBrazil      & 1999 &  37737 &  172006362 \\\\\nBrazil      & 2000 &  80488 &  174504898 \\\\\nChina       & 1999 & 212258 & 1272915272 \\\\\nChina       & 2000 & 213766 & 1280428583 \\\\\n\\bottomrule\n\\end{tblr}\n\\end{table}\n:::\n\n\n\n# Conclusion\n\nYou can use this template to start writing your paper, then make it your own by customizing it in any way you would like. You can use a [journal-style template](https://quarto.org/docs/journals/) or [make your own](https://quarto.org/docs/journals/formats.html).\n\n# References {.unnumbered}\n\n<!-- References go in the end by default, you can specify their placement with the following divider. -->\n\n::: {#refs}\n:::\n",
    "supporting": [
      "template_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{float}\n\\usepackage{tabularray}\n\\usepackage[normalem]{ulem}\n\\usepackage{graphicx}\n\\UseTblrLibrary{booktabs}\n\\UseTblrLibrary{siunitx}\n\\NewTableCommand{\\tinytableDefineColor}[3]{\\definecolor{#1}{#2}{#3}}\n\\newcommand{\\tinytableTabularrayUnderline}[1]{\\underline{#1}}\n\\newcommand{\\tinytableTabularrayStrikeout}[1]{\\sout{#1}}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}